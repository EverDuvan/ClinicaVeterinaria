// <auto-generated />
using System;
using ClinicaVet.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClinicaVet.App.Persistencia.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20211002050458_Veterinarios")]
    partial class Veterinarios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ClinicaVet.App.Dominio.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("dia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("dueñoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("horaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("veterinarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dueñoId");

                    b.HasIndex("veterinarioId");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaConsulta")
                        .HasColumnType("datetime2");

                    b.Property<string>("anotacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("auxiliarId")
                        .HasColumnType("int");

                    b.Property<int?>("mascotaId")
                        .HasColumnType("int");

                    b.Property<int?>("recetaId")
                        .HasColumnType("int");

                    b.Property<int?>("veterinarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("auxiliarId");

                    b.HasIndex("mascotaId");

                    b.HasIndex("recetaId");

                    b.HasIndex("veterinarioId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.HistoriaClinica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("consultaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("consultaId");

                    b.ToTable("HistoriaClinicas");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("dueñoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoMascota")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dueñoId");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Receta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("dosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("medicamentos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Recetas");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cedula")
                        .HasColumnType("int");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("cedula")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Auxiliar", b =>
                {
                    b.HasBaseType("ClinicaVet.App.Dominio.Usuario");

                    b.HasDiscriminator().HasValue("Auxiliar");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Dueño", b =>
                {
                    b.HasBaseType("ClinicaVet.App.Dominio.Usuario");

                    b.HasDiscriminator().HasValue("Dueño");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("ClinicaVet.App.Dominio.Usuario");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Agenda", b =>
                {
                    b.HasOne("ClinicaVet.App.Dominio.Dueño", "dueño")
                        .WithMany()
                        .HasForeignKey("dueñoId");

                    b.HasOne("ClinicaVet.App.Dominio.Veterinario", "veterinario")
                        .WithMany()
                        .HasForeignKey("veterinarioId");

                    b.Navigation("dueño");

                    b.Navigation("veterinario");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Consulta", b =>
                {
                    b.HasOne("ClinicaVet.App.Dominio.Auxiliar", "auxiliar")
                        .WithMany()
                        .HasForeignKey("auxiliarId");

                    b.HasOne("ClinicaVet.App.Dominio.Mascota", "mascota")
                        .WithMany()
                        .HasForeignKey("mascotaId");

                    b.HasOne("ClinicaVet.App.Dominio.Receta", "receta")
                        .WithMany()
                        .HasForeignKey("recetaId");

                    b.HasOne("ClinicaVet.App.Dominio.Veterinario", "veterinario")
                        .WithMany()
                        .HasForeignKey("veterinarioId");

                    b.Navigation("auxiliar");

                    b.Navigation("mascota");

                    b.Navigation("receta");

                    b.Navigation("veterinario");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.HistoriaClinica", b =>
                {
                    b.HasOne("ClinicaVet.App.Dominio.Consulta", "consulta")
                        .WithMany()
                        .HasForeignKey("consultaId");

                    b.Navigation("consulta");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Mascota", b =>
                {
                    b.HasOne("ClinicaVet.App.Dominio.Dueño", "dueño")
                        .WithMany()
                        .HasForeignKey("dueñoId");

                    b.Navigation("dueño");
                });
#pragma warning restore 612, 618
        }
    }
}
